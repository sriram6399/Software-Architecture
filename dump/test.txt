/**
 * Frontend Buyer Home
 */

package FinalProject;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.*;

import javax.swing.border.Border;

public class BuyerHome extends JPanel {
  Border blackline = BorderFactory.createLineBorder(Color.black);
  Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
  public static void main(String[] args) {
    JFrame frame = new JFrame();
    frame.add( new BuyerHome());
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setTitle("BuyerHome");
    frame.pack();
    frame.setVisible(true);
  }

  BuyerHome() {
    super();
    this.setPreferredSize(new Dimension(1024,700));
    this.setBorder(blackline);
    this.add(Buyer_items());
    this.add(Cart_items());

  }
  Component Cart_items(){
    JPanel cart_frame = new JPanel();
    cart_frame.setLayout(new BorderLayout(20,20));
    JLabel heading =new JLabel("My Cart");
    heading.setPreferredSize(new Dimension(200,30));
    cart_frame.add(heading);

    JPanel items_list = new JPanel();
    items_list.setLayout(new GridLayout(0,1,3,3));
    for(int i=1;i<5;i++){
      Component item = null;
      try {
        item = items("item"+i,i*10);
      } catch (IOException e) {
        throw new RuntimeException(e);
      }
      item.setPreferredSize(new Dimension(10,100));
      items_list.add(item);
    }
    JScrollPane thePane = new JScrollPane(items_list);
    thePane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
    thePane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    thePane.setEnabled(true);
    thePane.setVisible(true);
    thePane.setPreferredSize(new Dimension(200,650));
    cart_frame.add(thePane);
    return cart_frame;
  }
  Component Buyer_items(){

    JPanel buy_frame = new JPanel();
    JLabel heading =new JLabel("Check out the Products");
    heading.setPreferredSize(new Dimension(700,50));
    buy_frame.add(heading);
    buy_frame.setLayout(new BorderLayout(1,1));
    JPanel items_list = new JPanel();
    items_list.setLayout(new GridLayout(0,2,3,3));
    for(int i=1;i<100;i++){
      Component item = null;
      try {
        item = items("item"+i,i*10);
      } catch (IOException e) {
        throw new RuntimeException(e);
      }
      item.setPreferredSize(new Dimension(300,300));
      items_list.add(item);
    }

    //items_list.setPreferredSize(800,);
    JScrollPane thePane = new JScrollPane(items_list);
    thePane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
    thePane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    thePane.setEnabled(true);
    thePane.setVisible(true);
    thePane.setPreferredSize(new Dimension(700,650));
    buy_frame.add(thePane);
    return buy_frame;
  }
  Component items(String name,int price) throws IOException {
    JPanel item = new JPanel();

    JLabel Name =new JLabel("Name:"+name);
    Name.setLayout(new GridLayout(1,1,1,1));

    JLabel NameLabel=new JLabel("Price:"+price);
    NameLabel.setLayout(new GridLayout(1,1,1,1));

    JLabel desLabel=new JLabel("Description: This is a Product...........");
    desLabel.setLayout(new FlowLayout(FlowLayout.CENTER));

    item.add(Name);
    item.add(NameLabel);
    item.add(desLabel);
    item.setBorder(blackline);
    return item;
  }
}
